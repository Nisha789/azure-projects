{
	"name": "AirlineDataTransformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AirportDimData",
						"type": "DatasetReference"
					},
					"name": "AirportDimData"
				},
				{
					"dataset": {
						"referenceName": "DailyFlightsData",
						"type": "DatasetReference"
					},
					"name": "DailyFlightsData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ProcessedData_DS",
						"type": "DatasetReference"
					},
					"name": "WriteProcessedData",
					"description": "Export data to ProcessedData"
				}
			],
			"transformations": [
				{
					"name": "JoinOnDeptAirport",
					"description": "Inner Join on 'DailyFlightsData' and 'AirportDimData' "
				},
				{
					"name": "DeriveDeptAirportDetails"
				},
				{
					"name": "JoinOnArrivalAirport",
					"description": "Inner Join on 'DeriveDeptAirportDetails' and 'AirportDimData'"
				},
				{
					"name": "DeriveArrivalAirportDetails"
				}
			],
			"scriptLines": [
				"source(output(",
				"          airport_id as string,",
				"          city as string,",
				"          state as string,",
				"          name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AirportDimData",
				"source(output(",
				"          Carrier as string,",
				"          OriginAirportID as string,",
				"          DestAirportID as string,",
				"          DepDelay as string,",
				"          ArrDelay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DailyFlightsData",
				"DailyFlightsData, AirportDimData join(OriginAirportID == airport_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinOnDeptAirport",
				"JoinOnDeptAirport select(mapColumn(",
				"          Carrier,",
				"          DestAirportID,",
				"          DepDelay,",
				"          ArrDelay,",
				"          DepCity = city,",
				"          DepState = state,",
				"          DepAirportName = name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DeriveDeptAirportDetails",
				"DeriveDeptAirportDetails, AirportDimData join(DestAirportID == airport_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinOnArrivalAirport",
				"JoinOnArrivalAirport select(mapColumn(",
				"          Carrier,",
				"          DepDelay,",
				"          ArrDelay,",
				"          DepCity,",
				"          DepState,",
				"          DepAirportName,",
				"          ArrCity = city,",
				"          ArrState = state,",
				"          ArrName = name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DeriveArrivalAirportDetails",
				"DeriveArrivalAirportDetails sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> WriteProcessedData"
			]
		}
	}
}